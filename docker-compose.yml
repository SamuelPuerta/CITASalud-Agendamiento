version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: citas_postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME:-citasdb}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_NAME:-citasdb}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: citas_rabbitmq
    ports:
      - "${RABBITMQ_PORT_AMQP:-5672}:5672"
      - "${RABBITMQ_PORT_MGMT:-15672}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-guest}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog
    container_name: citas_mailhog
    ports:
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
      - "${MAILHOG_HTTP_PORT:-8025}:8025"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MAILHOG_HTTP_PORT:-8025} || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3

  adminer:
    image: adminer
    container_name: citas_adminer
    restart: always
    ports:
      - "${ADMINER_PORT:-8081}:8080"

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: citas_backend
    env_file:
      - .env
    ports:
      - "${SERVER_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./:/app:cached
    command: ["sh", "-c", "mvn -DskipTests package && java -jar target/*.jar"]
    restart: on-failure

volumes:
  pgdata:
